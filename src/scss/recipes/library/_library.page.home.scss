@import  "../virtual/data/virtual.helper.randomWords";

/*

Home

The sub pages have a common layouts.
 
Markup:
<div class="BODY_TAG-stand-in grid:md {{> 'Sub.ClassList.Body'}}">
	<div class="page-wrapper grid:md {{> 'Sub.ClassList.Page'}}">
		<div class="grid:md grid-template_page flex flex_column gap_4:md gap_3">
			{{> "Navigation.MainNav" modifier_class="grid-area_menuArea z_4" }}
			{{> "Structures.Home.Header" modifier_class="grid-area_headerArea" }}
			<section class="grid:md flex flex_column grid-col_5 gap_4  grid-area_mainArea p-y_3 p-y_0:md font_1:lg font_0 w_100">
				<div class="flex flex_column col-start col-end_5:lg col-end_4 font_0 font_1:lg font_ui font_regular w_100 {{> 'Sub.ClassList.Inset.up-1'}} {{> 'Sub.ClassList.Inset.padding.up-1'}}">
                    {{> 'Sub.Section.h2' modifier_class='Featured' }}    
                    {{> 'Structures.Home.Carousel'}}
                    {{> 'Sub.Section.Footer'  modifier_class='Featured' }}
                    {{> 'Sub.Section.h2' modifier_class='Hot Topics' }}
                    {{> 'Structures.Home.Carousel.Empty' modifier_class='Hot Topics'}}
                    {{> 'Sub.Section.Footer'  modifier_class='Hot Topics' }}
				</div>
				<div class="flex flex_column col-start_5:lg col-end col-start_4 w_100">
					<section class="font_0 font_1:lg font_ui font_regular flex_100 flex_auto {{> 'Sub.ClassList.Inset.up-1'}} {{> 'Sub.ClassList.Inset.padding.up-1'}}">
						{{> 'Sub.Section.h2' modifier_class="continue watching" }}
						<div class="font_n2 font_n1:lg relative isolation_isolate">
							<ul class="flex flex_column justify_stretch gap_0 ul_none {{> 'Sub.ClassList.Inset.down-1'}} {{> 'Sub.ClassList.Inset.padding.up-1'}}">
								{{> 'Program.Presentation.Condensed.Playable' modifier_class='#{ call(get-function('randomWords'), random(10)) }'}}
								{{> 'Program.Presentation.Condensed.Playable' modifier_class='#{ call(get-function('randomWords'), random(10)) }'}}
								{{> 'Program.Presentation.Condensed.Playable' modifier_class='#{ call(get-function('randomWords'), random(10)) }'}}
								{{> 'Program.Presentation.Condensed.Playable' modifier_class='#{ call(get-function('randomWords'), random(10)) }'}}
								{{> 'Program.Presentation.Condensed.Playable' modifier_class='#{ call(get-function('randomWords'), random(10)) }'}}
							</ul>
						</div>
						{{> 'Sub.Section.Footer'  modifier_class="continue watching" }}
					</section>
				</div>
				<div class="col-start col-end w_100">
					<section class='font_0 font_1:lg font_ui font_regular flex_100 flex_auto {{> 'Sub.ClassList.Inset.up'}} {{> 'Sub.ClassList.Inset.padding.up-1'}}'> {{> 'Sub.Section.h2' modifier_class='watch again' }}
						{{> 'Structures.Home.Carousel.Empty' modifier_class='watch again'}}
						{{> 'Sub.Section.Footer'  modifier_class='watch again' }}
						{{> 'Sub.Section.h2' modifier_class='saved' }}
						{{> 'Structures.Home.Carousel.Empty' modifier_class='saved' }}
						{{> 'Sub.Section.Footer'  modifier_class='saved' }}
					</section>
				</div>
			</section>
			<footer class="flex flex_column gap_4 grid-area_footerArea grid-col_5 grid:md m-t_auto p-y_0:md p-y_3">
				{{> 'Navigation.Footer.Links' modifier_class='col-start col-end_4' }}
				{{> 'Sub.Footer.Logo'  modifier_class='col-start_4 col-end' }}
			</footer>
		</div>
	</div>
</div>



MarkupWrapperClasses: 


NOTE: This page will not render 100% correctly because it is calculated based on the whole viewport and the styleguide has it wrapped in page dynamics..
 
Weight:0
 
Styleguide Page.Pages.Home
*/



/*

Header

Home page branding splash with ka site search. 
 
Markup:
<header class="p_3 p_0:md {{modifier_class}}">
    <section class="br_radius overflow_hidden relative z_1">
        <picture class="w_100">
            <source class="w_100" srcset="https://acc-style.github.io/PrototypingACCorg/assets/images/lib/J22043_1440x250.jpg" media="(min-width: 1200px)">
            <source class="w_100" srcset="https://acc-style.github.io/PrototypingACCorg/assets/images/lib/J22043_1200x250.jpg" media="(min-width: 1024px)">
            <source class="w_100" srcset="https://acc-style.github.io/PrototypingACCorg/assets/images/lib/J22043_768x200.jpg" media="(min-width: 768px)">
            <source class="w_100" srcset="https://acc-style.github.io/PrototypingACCorg/assets/images/lib/J22043_600x225.jpg" media="(min-width: 400px)">
            <img src="https://acc-style.github.io/PrototypingACCorg/assets/images/lib/J22043_400x300.jpg" class="w_100" alt="">
        </picture>
    </section>
    <div class="m_auto m-t_n4 t_n4 t_n5:lg m-t_n5:lg max-w_60:lg max-w_40:md p-x_3 p-x_5:md z_2 relative">
        {{> "Sub.Section.HeaderPanel"}}
    </div>
</header>

MarkupWrapperClasses: 

SubComponent: 
Sub.Section.HeaderPanel - Search Bar
 
Weight:0
 
Styleguide Structures.Home.Header
*/

/*

Home Search Link Inset

A central interaction point for the user on the homepage. 
 
Markup:
<div class="{{> 'Sub.ClassList.Inset.up-1'}}  {{> 'Sub.ClassList.Inset.padding.up-4'}}">
    {{> 'Sub.Section.SearchBar' modifier_class="disabled" }}
    {{> 'Navigation.Home.Utility' }} 
</div>

MarkupWrapperClasses: 

SubComponents:
Sub.Section.SearchBar - Search Bar with `disabled` Class
Navigation.Home.Utility - Quick Links

ClassList:
Sub.ClassList.Inset.up-1  - Inset up 1
Sub.ClassList.Inset.padding.up-4 - Padding up 4

Weight:0
 
Styleguide Sub.Section.HeaderPanel
*/

/*

Home Search Bar

The Search Bar is disabled on the Home Page when there is no content in the input field.

 
Markup:
<div class="input-holder flex flex_row self_end relative w_100 {{> "Sub.ClassList.Inset.padding"}}">
    <input id="input_uniqueTextAndButton" name="input_uniqueTextAndButton" type="text" placeholder="Search" class="br_2 flex_auto p-y_2 br_solid flex_auto p-l_4 lh_3 br_radius bg_white c_black bg_white f:bg_primary br_black-2  font_2"/>
    <button  class="{{ modifier_class }} b_0 br-br_radius br-tr_radius br_none br_square btn btn-primary c_white ease_out f:outline_none font_2 font_regular font_ui h:br_primary-n3 h:underline inline-block r_0 t_0 text_center transition_1 undecorated w_auto" >
    <i class="fas fa-search"></i>
    <span class="inline-block:md display_none">Search</span>
    </button>
</div>

MarkupWrapperClasses: 
 
Weight:0
 
Styleguide Sub.Section.SearchBar
*/

/*

Section Footer

Section footer links to the Search Collection Page.
 
Markup:
<footer class="flex flex_row-reverse p-t_3 p-b_4"><a href="" class="link self_end ">view all from &quot;{{modifier_class}}&quot; <i class="fal fa-chevron-circle-right m-r_3"></i></a></footer>   

MarkupWrapperClasses: 
 
Weight:0
 
Styleguide Sub.Section.Footer
*/

/*

Carousel 

Horizontal Carousels to have discoverable areas on the home pages.


Markup:
<div class="relative isolation_isolate overflow_hidden {{>'Sub.ClassList.Inset.margin.down-1'}}">
        <div id="slider1" class=" flex flex_row justify_stretch p-y_4 p-x_3 overflow_hidden m-y_3 {{> 'Sub.ClassList.Inset.down-1'}} ">
        {{> "Program.Session.Home"  modifier_class="#{ call(get-function('randomWords'), random(10)) }"}}
        {{> "Program.Session.Home"  modifier_class="#{ call(get-function('randomWords'), random(10)) }"}}
        {{> "Program.Session.Home"  modifier_class="#{ call(get-function('randomWords'), random(10)) }"}}
        {{> "Program.Session.Home"  modifier_class="#{ call(get-function('randomWords'), random(10)) }"}}        
        {{> "Program.Session.Home"  modifier_class="#{ call(get-function('randomWords'), random(10)) }"}}
        {{> "Program.Session.Home"  modifier_class="#{ call(get-function('randomWords'), random(10)) }"}}        
        {{> "Program.Session.Home"  modifier_class="#{ call(get-function('randomWords'), random(10)) }"}}
        {{> "Program.Session.Home"  modifier_class="#{ call(get-function('randomWords'), random(10)) }"}}
    </div>
    {{> 'Sub.Carousel.CustomTools'}}
</div>
<script>
    document.addEventListener("DOMContentLoaded", function(event) { 
    let args ={
        items:1,
        mouseDrag: true,
        slideBy: "page",
        swipeAngle: false,
        autoplay: false,
        controls: true,
        nav: false,
        edgePadding: 0,
        loop:true,
        edgePadding:48,
        center:false,
        gutter:16,
        responsive: {
            1: {
                items: 1
            },
                    768: {
                items: 1
            },
            1200: {
                items: 2
            },
            1400: {
                items: 3
            }
        }};
        let slider1 = tns({ container: '#slider1', controlsContainer: "#slider1-customize-controls", ...args });
    });
</script>

MarkupWrapperClasses: 

Weight: 0

SubComponents:
Program.Session.Home    - Session

ClassList:
Sub.ClassList.Inset.margin.down-1 - Margin down 1
Sub.ClassList.Inset.down-1 - Inset down 1

NOTE: This design requires javascript. (tiny slider js)

Styleguide Structures.Home.Carousel
*/

/*

TinySlider.js

Script tags for tinySlider


Markup:
<h2> Slider CSS </h2>
<span class="user-select_all">https://cdnjs.cloudflare.com/ajax/libs/tiny-slider/2.9.3/tiny-slider.css</span>
<h2> Slider JS </h2>
<span class="user-select_all">https://cdnjs.cloudflare.com/ajax/libs/tiny-slider/2.9.2/min/tiny-slider.js</span>

MarkupWrapperClasses: 

Weight: 0


Styleguide Structures.Home.TinySlider
*/


/*


Carousel Empty State

The empty state of the carousel

Markup:
<div class="p-y_3 relative {{>'Sub.ClassList.Inset.margin.down-1'}}"> 
    <div class="tns-outer {{> 'Sub.ClassList.Inset.down-1'}}  font_0 font_ui font_regular" >
        <div class="tns-ovh">
            <div class="tns-inner" >
                <div id="slider3" class=" flex flex_row justify_stretch p-y_4 p-x_3 overflow_hidden  tns-slider tns-carousel tns-subpixel tns-calc tns-horizontal" >
                    <div class="tns-item  tns-slide-active p-x_5">
                        <article class="bg_white br_1 br_black-1 br_radius br_solid flex flex_grow shadow_overlap-light w_100">
                            <div class="flex flex_row justify_start relative w_100">
                                <main class="flex flex_column flex_auto justify_between flex_auto p-l_4 p-x_4:md  p-y_3 p-y_3:lg relative w_100 isolation_isolate reading-typography">
                                    <h2 class="">
                                       You don't have any previously {{modifier_class}} presentations.
                                    </h2>
                                    <p>This collection is based off of your watching history. Come back here when you want to review or re-watch what you have previously viewed.</p>
                                </main>
                            </div>
                        </article>
                    </div>
                </div>
            </div>
        </div>
    </div>
    {{> 'Sub.Carousel.CustomTools.Disabled' }}
</div>

MarkupWrapperClasses: 

SubComponents:
Sub.Carousel.CustomTools.Disabled - Disabled Navigation

ClassList:
Sub.ClassList.Inset.margin.down-1 - Margin down 1
Sub.ClassList.Inset.down-1 - Inset Down 1

Weight: 0

Styleguide Structures.Home.Carousel.Empty
*/
/* nav */
.tns-nav {
    text-align: center;
    margin: 0.5rem 0;
    > [aria-controls] {
    width: 0.5rem;
    height: 0.5rem;
    padding: 0;
    margin: 0 0.25rem;
    border-radius: 50%;
    background: #ddd;
    border: 0;
    min-height: 0;
    line-height: 1;
    }
    > .tns-nav-active {
    background: #999;
    }
}

.tns-item {
    display: flex !important;
}

.tns-visually-hidden {
    display: none;
}
.tns-inner{margin:0 !important;}



/*

Continue Watching

Shows a short list of presentations

default		 - 

Markup:
    {{> 'Sub.Section.h2' modifier_class="continue watching" }}
    <div class="relative isolation_isolate overflow_hidden  {{> 'Sub.ClassList.Inset.down-1'}} ">
        <div id="SliderContinueWatching" class="flex flex_column gap_3 justify_stretch p-y_4 p-x_3 overflow_hidden m-y_3  {{> 'Sub.ClassList.Inset.down'}} ">
        {{> "Program.Presentation.Condensed"  modifier_class="#{ call(get-function('randomWords'), random(10)) }"}}
        {{> "Program.Presentation.Condensed"  modifier_class="#{ call(get-function('randomWords'), random(10)) }"}}
        {{> "Program.Presentation.Condensed"  modifier_class="#{ call(get-function('randomWords'), random(10)) }"}}
        {{> "Program.Presentation.Condensed"  modifier_class="#{ call(get-function('randomWords'), random(10)) }"}}
        {{> "Program.Presentation.Condensed"  modifier_class="#{ call(get-function('randomWords'), random(10)) }"}}
        </div>
        {{> 'Sub.Carousel.CustomToolsVertical'}}
    </div>
    <footer class="flex flex_row-reverse p-t_3 p-b_4"><a href="" class="link self_end ">view all from &quot;{{modifier_class}}&quot; <i class="fal fa-chevron-circle-right m-r_3"></i></a></footer>      
<script>
document.addEventListener("DOMContentLoaded", function(event) {   
let args2 ={
    items: 1,
    mouseDrag: true,
    axis: "vertical",
    slideBy: "page",
    swipeAngle: false,
    autoplay: false,
    controls: true,
    items:3,
    nav: false,
    edgePadding: 0,
    loop:true,
    edgePadding:0,
    center:true,
    gutter:16
    };
    let slider2 = tns({ container: '#SliderContinueWatching', controlsContainer: "#slider-customize-controls-vertical", ...args2 });
});</script>

MarkupWrapperClasses: main-area-offset p_2 p-x_5:md p-y_4:md isolation_isolate br_radius bg_white-7

NOTE: container: '#SliderContinueWatching', controlsContainer: "#slider-customize-controls-vertical" need to be unique to the slider. 

EXPERIMENTAL: this design is new and is not being used.

Weight: 0



Styleguide Structures.Home.ContinuePlaying
*/