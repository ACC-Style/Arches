// https://css-tricks.com/programming-sass-to-create-accessible-color-combinations/

// See https://www.w3.org/TR/AERT/#color-contrast for original algorithm used for this function
@function colour-difference($foreground, $background) {
	$r: (max(red($foreground), red($background))) - (min(red($foreground), red($background)));
	$g: (max(green($foreground), green($background))) - (min(green($foreground), green($background)));
	$b: (max(blue($foreground), blue($background))) - (min(blue($foreground), blue($background)));
	$sum-rgb: $r + $g + $b;
	
	@if $sum-rgb < 500 {
	  @return "false";
	} @else {
	  @return "true";
	}
  }
  
  @mixin text-contrast($n) {
	$color-brightness: round((red($n) * 299) + (green($n) * 587) + (blue($n) * 114) / 1000);
	$light-color: round((red(#ffffff) * 299) + (green(#ffffff) * 587) + (blue(#ffffff) * 114) / 1000);
  
	@if abs($color-brightness) < ($light-color/2){
	  color: white;
	}
	@else {
	  color: black;
	}
  }
  
  ///
  
  $button-background-colour: red;
  
  button {
	background-color: $button-background-colour;
	border: 0;
	padding: 1em 2em;
	@include text-contrast($button-background-colour);
  }
  
  ///
  
  $heading-colour: #FFD828; // rgb(255,216,40)
  
  h1 {  
	color: $heading-colour;
	@while (colour-difference($heading-colour, #fff) == "false") {
	  color: $heading-colour;
	  $heading-colour: darken($heading-colour, 1%);
	  @if (colour-difference($heading-colour, #fff) == "true") {
		color: $heading-colour;
	  }
	}
  }
  
  ///
  
  $grey: #F0F0F0; // rgb(240,240,240)
  
  span {
	@while (colour-difference($heading-colour, $grey) == "false") {
	  color: $heading-colour;
	  $heading-colour: darken($heading-colour, 1%);
	  @if (colour-difference($heading-colour, $grey) == "true") {
		color: $heading-colour;
	  }
	}
  }
  
  
  .background {
	display: block;
	padding: 20px;
	background-color: #F0F0F0;
  }
  
  @import url('https://fonts.googleapis.com/css?family=Open+Sans');
  * {
	font-family: 'Open Sans', sans-serif;
  }