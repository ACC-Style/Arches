@function class-name-constructor($key, $unit, $breakpoint: '', $state: '') {
    $names: '';
    $root-name: get-css-shortname($key);
    $unit: '' !default;
    $unit-seperator: '';
    $state-long-name: '';
    $state-root-name: '';
    $state-psudo: '';
    @if ($state=='hover') {
        $state-root-name: get-css-shortname(hover);
        $state-psudo: ':hover';
    }
    @if ($state=='visited') {
        $state-root-name: get-css-shortname(visited);
        $state-psudo: ':visited';
    }
    @if ($state=='active') {
        $state-root-name: get-css-shortname(active);
        $state-psudo: ':active';
    }
    @if ($state=='is-active') {
        $state-root-name: '#{$active-class-name}>.a\\3A ';
    }
    @if ($state=='is-active-self') {
        $state-root-name: '#{$active-class-name}.a\\3A ';
    }
    @if ($state !='') {
        $root-name: str-insert( $string: $root-name, $insert: $state-root-name, $index: 2, );
    }
    @if ($unit !='') {
        $unit-seperator: '_';
    }
    // there are some classes that need no root name becuase the unit is descriptive enough to be on there own.
    @if ($root-name=='.') {
        $names: #{$root-name}#{$unit}#{$breakpoint}#{$state-psudo};
    }
    @else {
        $names: #{$root-name}#{$unit-seperator}#{$unit}#{$breakpoint}#{$state-psudo};
    }
    @return $names;
}