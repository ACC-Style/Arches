/*
Grid
 
A great way to manipulating a repeating grid is to use the new CSS 3 grid layouts. 
 

Styleguide  Layouts.Grid
*/

/*
Grid Gap
 
Description: Grid Gap  #{modifierClassTable(grid-column-gap)}  #{modifierClassTable(grid-row-gap)}  

Weight: 0
 
Styleguide  Layouts.Grid.Gap
*/
.grid{
	grid-auto-flow: row;
}
@include loop-style(grid-template-columns,"","");
@include loop-style(grid-template-rows,"","");
@include loop-style(grid-gap,"","");
@include loop-style(grid-column-gap,"","");
@include loop-style(grid-row-gap,"","");

@include loop-style(grid-column-start,"","");
@include loop-style(grid-column-end,"","");
@include loop-style(grid-row-start,"","");
@include loop-style(grid-row-end,"","");

@media #{$medium-up} {
	@include loop-style(grid-template-columns, $bp-label_medium,"");
	@include loop-style(grid-template-rows, $bp-label_medium,"");
	@include loop-style(grid-gap, $bp-label_medium, "");
	@include loop-style(grid-row-gap, $bp-label_medium, "");
	@include loop-style(grid-column-gap, $bp-label_medium, "");

	@include loop-style(grid-column-start, $bp-label_medium,"");
	@include loop-style(grid-column-end, $bp-label_medium,"");
	@include loop-style(grid-row-start, $bp-label_medium,"");
	@include loop-style(grid-row-end, $bp-label_medium,"");
}

@media #{$large-up} {
	@include loop-style(grid-template-columns, $bp-label_large,"");
	@include loop-style(grid-template-rows, $bp-label_large,"");
	@include loop-style(grid-gap, $bp-label_large, "");
	@include loop-style(grid-row-gap, $bp-label_large, "");
	@include loop-style(grid-column-gap, $bp-label_large, "");

	@include loop-style(grid-column-start, $bp-label_large,"");
	@include loop-style(grid-column-end, $bp-label_large,"");
	@include loop-style(grid-row-start, $bp-label_large,"");
	@include loop-style(grid-row-end, $bp-label_large,"");
}
/*
Grid Column Template
 
Description: Grid Template

.template-x_20		-  grid layouts that are responsive and hold a certain size when able.
.template-x_25		-  grid layouts that are responsive and hold a certain size when able.
.template-x_30		-  grid layouts that are responsive and hold a certain size when able.
.template-x_35		-  grid layouts that are responsive and hold a certain size when able.
.template-x_40		-  grid layouts that are responsive and hold a certain size when able.
 
Markup:
<div></div>

 
Weight: 0
 
Styleguide  Layouts.Grid.Template
*/
.col-2x {
	grid-template-columns: repeat(2,1fr);
}
.template-x_15 {
	grid-template-columns: repeat(auto-fill,50%);
}

.template-x_20,
.template-x_25,
.template-x_30,
.template-x_35,
.template-x_40 {
	grid-template-columns: repeat(auto-fill,100%);
}

@media #{$medium-up} {
	.template-x_15 {
	grid-template-columns: repeat(auto-fill,minmax(15rem, .5fr));
}
	.template-x_20 {
	grid-template-columns: repeat(auto-fill, minmax(20rem, .5fr));
}
	.template-x_25 {
		grid-template-columns: repeat(auto-fill, minmax(20rem, .5fr));
	}
	.template-x_30 {
		grid-template-columns: repeat(auto-fill, minmax(20rem, 1fr));
	}
	.template-x_35 {
		grid-template-columns: repeat(auto-fill, minmax(25rem, 1fr));
	}
	.template-x_40 {
		grid-template-columns: repeat(auto-fill, minmax(30rem, 1fr));
	}
}
@media #{$large-up} {
	.template-x_25 {
		grid-template-columns: repeat(auto-fill, minmax(25rem, .333fr));
	}
	.template-x_30 {
		grid-template-columns: repeat(auto-fill, minmax(30rem, .5fr));
	}
	.template-x_35 {
		grid-template-columns: repeat(auto-fill, minmax(35rem, 1fr));
	}
	.template-x_40 {
		grid-template-columns: repeat(auto-fill, minmax(40rem, 1fr));
	}
}
